version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: securesafar
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - securesafar-network

  # MongoDB Database
  mongodb:
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: securesafar
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - securesafar-network

  # Redis Cache
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - securesafar-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/securesafar
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - MONGODB_DATABASE=securesafar
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-jwt-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - ./backend:/app
    networks:
      - securesafar-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - securesafar-network
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    command: npm run dev -- --host

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - securesafar-network
    profiles:
      - production

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  securesafar-network:
    driver: bridge